{"version":3,"sources":["timeCalculator.js","Timer.js","villagers/villagerActivityLog.js","ActivityLog.js","villagers/villager.js","villagers/farmerRoughHands.js","villagers/msBrookfern.js","App.js","serviceWorker.js","index.js"],"names":["startTime","Date","now","calculateDayString","dayValue","calculateVillageTime","timeDifference","newTime","day","getDay","hours","getHours","minutes","getMinutes","Timer","className","useState","villageTime","setVillageTime","useEffect","setTimeout","toString","padStart","VillageActivityLog","villagers","currentTime","map","villager","villagerName","getName","activityText","getActivity","key","ActivityLog","Villager","name","age","schedule","this","currentDay","hour","location","Array","from","get","values","find","startHour","endHour","activity","sleepActivity","breakfastActivity","workActivity","lunchActivity","workActivityAgain","churchActivity","drinkingActivity","dinnerActivity","readActivity","nightSleepActivity","Map","set","FarmerRoughHands","endhour","highActivity","starthour","poemActivity","spellActivity","wanderActivity","mightyTreeActivity","foragingActivity","MsBrookfern","farmerRoughHands","msBrookfern","StyledTimer","styled","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.38701961.chunk.js","sourcesContent":["/**\r\n * Used to convert real time to game time\r\n */\r\nconst startTime = Date.now();\r\nconst TIME_MULTIPLIER = 60;\r\n\r\n\r\nconst calculateDayString = (dayValue) => {\r\n    switch(dayValue) {\r\n        case 0: \r\n            return 'Sunday';\r\n        case 1: \r\n            return 'Monday';\r\n        case 2:\r\n            return 'Tuesday';\r\n        case 3:\r\n            return 'Wednesday';\r\n        case 4:\r\n            return 'Thursday';\r\n        case 5:\r\n            return 'Friday';\r\n        case 6:\r\n            return 'Saturday';\r\n        default:\r\n            return 'Unknown';\r\n    }\r\n}\r\n\r\n const calculateVillageTime = () => {\r\n    const currentTime = Date.now();\r\n    const timeDifference = (Date.now() - startTime) * TIME_MULTIPLIER;\r\n    const newTime = new Date(timeDifference + startTime);\r\n    return {\r\n        day: calculateDayString(newTime.getDay()),\r\n        hours: newTime.getHours(),\r\n        minutes: newTime.getMinutes()\r\n    }\r\n }\r\n\r\n\r\n export {\r\n     calculateVillageTime\r\n }","import React, { useEffect, useState } from 'react';\r\nimport { calculateVillageTime } from './timeCalculator';\r\n\r\nfunction Timer({ className }) {\r\n\r\n    const [villageTime, setVillageTime] = useState(calculateVillageTime());\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setVillageTime(calculateVillageTime());\r\n        }, 1000);\r\n      });\r\n\r\n    return (\r\n        <div className= {className}>  Current Time: {villageTime.day} {villageTime.hours}:{villageTime.minutes.toString().padStart('2', '0')}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Timer;\r\n\r\n//         \r\n","import React from 'react';\r\n\r\nfunction VillageActivityLog({ villagers, currentTime }) {\r\n    const buildVillagerActivity = () => {\r\n        return villagers.map((villager) => {\r\n            return {\r\n                villagerName: villager.getName(),\r\n                activityText: `${villager.getName()}: ${villager.getActivity(currentTime.day, currentTime.hours)}`\r\n            }\r\n        }); \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {buildVillagerActivity().map((villager) => {\r\n                return (\r\n                    <div key={villager.villagerName}> {villager.activityText} </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default VillageActivityLog;","import React, { useEffect, useState } from 'react';\r\nimport VillagerActivityLog from './villagers/villagerActivityLog';\r\nimport { calculateVillageTime } from './timeCalculator';\r\n\r\n\r\n\r\nfunction ActivityLog({ villagers }) {\r\n\r\n    const [villageTime, setVillageTime] = useState(calculateVillageTime());\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setVillageTime(calculateVillageTime());\r\n        }, 60000);\r\n      });\r\n\r\n    return (\r\n        <div>\r\n            <VillagerActivityLog\r\n                villagers={villagers}\r\n                currentTime={villageTime}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActivityLog;","\r\nexport default class Villager {\r\n    constructor(name, age, schedule) {\r\n        this.name = name;\r\n        this.age = age;\r\n        this.schedule = schedule;\r\n    }\r\n\r\n    getLocation(currentDay, currentTime) {\r\n        return \"who knows man\";\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getAge()  {\r\n        return this.age;\r\n    }\r\n\r\n    getSchedule() {\r\n        return this.schedule;\r\n    }\r\n\r\n    getActivity(day, hour) {\r\n        const dailySchedule = Array.from(this.schedule.get(day).values());\r\n        const location = dailySchedule.find(({ startHour, endHour}) => {\r\n            if (hour >= startHour && hour < endHour) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n\r\n        return location && location.activity;\r\n    }\r\n}","import Villager from \"./villager\";\r\n\r\nconst name = \"Farmer Rough Hands\";\r\nconst age = \"48\";\r\n\r\nconst sleepActivity = {\r\n    startHour: 0,\r\n    endHour: 5,\r\n    activity: 'Sleep', \r\n};\r\n\r\nconst breakfastActivity = {\r\n    startHour: 5,\r\n    endHour: 6,\r\n    activity: 'Eating Breakfast',\r\n};\r\n\r\nconst workActivity = {\r\n    startHour: 6,\r\n    endHour: 11,\r\n    activity: 'Work the farm'\r\n};\r\n\r\nconst lunchActivity = {\r\n    startHour: 11,\r\n    endHour: 12,\r\n    activity: 'Lunch'\r\n};\r\n\r\nconst workActivityAgain = {\r\n    startHour: 12,\r\n    endHour: 15,\r\n    activity: 'Work the farm'\r\n};\r\n\r\nconst churchActivity = {\r\n    startHour: 15,\r\n    endHour: 16,\r\n    activity: 'Church'\r\n};\r\n\r\nconst drinkingActivity = {\r\n    startHour: 15,\r\n    endHour: 18,\r\n    activity: 'Drinking at The Vicious Horde'\r\n};\r\n\r\nconst dinnerActivity = {\r\n    startHour: 18,\r\n    endHour: 19,\r\n    activity: 'Dinner'\r\n};\r\n\r\nconst readActivity = {\r\n    startHour: 19,\r\n    endHour: 21,\r\n    activity: 'Reading'\r\n};\r\n\r\nconst nightSleepActivity = {\r\n    startHour: 21,\r\n    endHour: 24,\r\n    activity: 'Sleeping'\r\n};\r\n\r\nconst schedule = new Map();\r\n\r\nschedule.set('Sunday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    workActivity,\r\n    lunchActivity,\r\n    workActivityAgain,\r\n    churchActivity,\r\n    {\r\n        ...drinkingActivity,\r\n        startHour: 16,\r\n    },\r\n    dinnerActivity,\r\n    readActivity,\r\n    nightSleepActivity\r\n]);\r\n\r\nschedule.set('Monday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    workActivity,\r\n    lunchActivity,\r\n    workActivityAgain,\r\n    drinkingActivity,\r\n    dinnerActivity,\r\n    readActivity,\r\n    nightSleepActivity\r\n]);\r\n\r\nschedule.set('Tuesday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    workActivity,\r\n    lunchActivity,\r\n    workActivityAgain,\r\n    drinkingActivity,\r\n    dinnerActivity,\r\n    readActivity,\r\n    nightSleepActivity\r\n]);\r\n\r\nschedule.set('Wednesday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    workActivity,\r\n    lunchActivity,\r\n    workActivityAgain,\r\n    churchActivity,\r\n    drinkingActivity,\r\n    dinnerActivity,\r\n    readActivity,\r\n    nightSleepActivity\r\n]);\r\n\r\nschedule.set('Thursday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    workActivity,\r\n    lunchActivity,\r\n    workActivityAgain,\r\n    {\r\n        ...drinkingActivity,\r\n        endHour: 22,\r\n    },\r\n    nightSleepActivity\r\n]);\r\n\r\nschedule.set('Friday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    workActivity,\r\n    lunchActivity,\r\n    workActivityAgain,\r\n    {\r\n        ...drinkingActivity,\r\n        endHour: 22,\r\n    },\r\n    nightSleepActivity\r\n]);\r\n\r\nschedule.set('Saturday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    workActivity,\r\n    lunchActivity,\r\n    workActivityAgain,\r\n    {\r\n        ...drinkingActivity,\r\n        endHour: 22,\r\n    },\r\n    nightSleepActivity\r\n]);\r\n\r\nexport default class FarmerRoughHands extends Villager {\r\n    constructor() {\r\n        super(name, age, schedule);\r\n    }    \r\n}\r\n\r\n","import Villager from \"./villager\";\r\n\r\nconst name = \"Lillian Brookfern\";\r\nconst age = \"28\";\r\n\r\nconst sleepActivity = {\r\n    startHour: 0,\r\n    endHour: 11,\r\n    activity: 'Sleep'\r\n}\r\n\r\nconst breakfastActivity = {\r\n    startHour: 11,\r\n    endHour: 12,\r\n    activity: 'Eating breakfast'\r\n}\r\n\r\nconst drinkingActivity = {\r\n    startHour: 20,\r\n    endhour: 24,\r\n    activity: 'Drinking at The Vicious Horde'\r\n};\r\n\r\nconst highActivity = {\r\n    starthour: 12,\r\n    endHour: 13,\r\n    activity: 'Getting High'\r\n};\r\n\r\nconst poemActivity = {\r\n    startHour: 13,\r\n    endHour: 15,\r\n    activity: 'Writing Poems'\r\n};\r\n\r\nconst spellActivity = {\r\n    startHour: 13,\r\n    endHour: 15,\r\n    activity: 'Writing Spells'\r\n};\r\n\r\nconst wanderActivity = {\r\n    startHour: 15,\r\n    endHour: 16,\r\n    activity: 'Wandering the village'\r\n};\r\n\r\nconst mightyTreeActivity = {\r\n    startHour: 16,\r\n    endHour: 19,\r\n    activity: 'Open Hours at the Mighty Tree'\r\n};\r\n\r\nconst graveyardActivity = {\r\n    startHour: 16,\r\n    endHour: 17,\r\n    activity: 'Visting the graveyard'\r\n};\r\n\r\nconst cryingActivity = {\r\n    startHour: 17,\r\n    endHour: 18,\r\n    activity: 'Crying'\r\n};\r\n\r\nconst foragingActivity = {\r\n    startHour: 19,\r\n    endHour: 20,\r\n    activity: 'Foraging in the forest'\r\n};\r\n\r\nconst napActivity = {\r\n    startHour: 17,\r\n    endHour: 18,\r\n    activity: 'Napping'\r\n};\r\n\r\nconst schedule = new Map();\r\n\r\nschedule.set('Sunday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    highActivity,\r\n    poemActivity,\r\n    wanderActivity,\r\n    graveyardActivity,\r\n    cryingActivity,\r\n    {\r\n        ...highActivity,\r\n        startHour: 18,\r\n        endHour: 19\r\n    },\r\n    foragingActivity,\r\n    drinkingActivity\r\n]);\r\n\r\nschedule.set('Monday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    highActivity,\r\n    spellActivity,\r\n    wanderActivity,\r\n    mightyTreeActivity,\r\n    foragingActivity,\r\n    drinkingActivity\r\n]);\r\n\r\nschedule.set('Tuesday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    highActivity,\r\n    poemActivity,\r\n    wanderActivity,\r\n    mightyTreeActivity,\r\n    foragingActivity,\r\n    drinkingActivity\r\n]);\r\n\r\nschedule.set('Wednesday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    highActivity,\r\n    spellActivity,\r\n    wanderActivity,\r\n    mightyTreeActivity,\r\n    foragingActivity,\r\n    drinkingActivity\r\n]);\r\n\r\nschedule.set('Thursday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    highActivity,\r\n    spellActivity,\r\n    wanderActivity,\r\n    mightyTreeActivity,\r\n    foragingActivity,\r\n    drinkingActivity\r\n]);\r\n\r\nschedule.set('Friday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    highActivity,\r\n    poemActivity,\r\n    wanderActivity,\r\n    mightyTreeActivity,\r\n    foragingActivity,\r\n    drinkingActivity\r\n]);\r\n\r\nschedule.set('Saturday', [\r\n    sleepActivity,\r\n    breakfastActivity,\r\n    highActivity,\r\n    spellActivity,\r\n    poemActivity,\r\n    {\r\n        ...highActivity,\r\n        startHour: 16,\r\n        endHour: 17\r\n    },\r\n    napActivity,\r\n    {\r\n        ...highActivity,\r\n        startHour: 18,\r\n        endHour: 19\r\n    },\r\n    foragingActivity,\r\n    drinkingActivity\r\n]);\r\n\r\nexport default class MsBrookfern extends Villager {\r\n    constructor() {\r\n        super(name, age, schedule);\r\n    }    \r\n}","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport Timer from './Timer';\nimport ActivityLog from './ActivityLog';\nimport FarmerRoughHands from './villagers/farmerRoughHands';\nimport MsBrookfern from './villagers/msBrookfern';\n\nconst farmerRoughHands = new FarmerRoughHands();\nconst msBrookfern = new MsBrookfern();\n\nconst StyledTimer = styled(Timer)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin-right: 1.5rem;\n  margin-top: 1rem;\n`;\n\n\nfunction App() {\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <StyledTimer />\n      <ActivityLog\n        villagers={[farmerRoughHands, msBrookfern]}\n      />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}